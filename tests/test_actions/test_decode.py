import asyncio
from pathlib import Path
from unittest import skip

from lib.actions import decode
from .base import BaseTCAPMAPActionTestCase


class TestDecodedActionTCAPMAP(BaseTCAPMAPActionTestCase):
    action_cls = decode.Action

    def test_00_content(self):
        content = self.action.get_content(self.msg)
        self.assertEqual(content,
                         "('begin',\n {'components': [('basicROS',\n                  ('invoke',\n                   {'argument': ('RoutingInfoForSM-Arg',\n                                 {'msisdn': b'\\x91\\x14\\x97Bu3\\xf3',\n                                  'serviceCentreAddress': b'\\x91\\x14\\x97y'\n                                                          b'y\\x08\\xf0',\n                                  'sm-RP-PRI': False}),\n                    'invokeId': ('present', -1),\n                    'opcode': ('local', 45)}))],\n  'dialoguePortion': {'direct-reference': (0, 0, 17, 773, 1, 1, 1),\n                      'encoding': ('single-ASN1-type',\n                                   ('DialoguePDU',\n                                    ('dialogueRequest',\n                                     {'application-context-name': (0,\n                                                                   4,\n                                                                   0,\n                                                                   0,\n                                                                   1,\n                                                                   0,\n                                                                   20,\n                                                                   2),\n                                      'protocol-version': (1, 1)})))},\n  'otid': b'\\x00\\x00\\x00\\x01'})")

    def test_01_print_msg(self):
        content = self.print_action.print_msg(self.msg)
        self.assertEqual(content,
                         "('begin',\n {'components': [('basicROS',\n                  ('invoke',\n                   {'argument': ('RoutingInfoForSM-Arg',\n                                 {'msisdn': b'\\x91\\x14\\x97Bu3\\xf3',\n                                  'serviceCentreAddress': b'\\x91\\x14\\x97y'\n                                                          b'y\\x08\\xf0',\n                                  'sm-RP-PRI': False}),\n                    'invokeId': ('present', -1),\n                    'opcode': ('local', 45)}))],\n  'dialoguePortion': {'direct-reference': (0, 0, 17, 773, 1, 1, 1),\n                      'encoding': ('single-ASN1-type',\n                                   ('DialoguePDU',\n                                    ('dialogueRequest',\n                                     {'application-context-name': (0,\n                                                                   4,\n                                                                   0,\n                                                                   0,\n                                                                   1,\n                                                                   0,\n                                                                   20,\n                                                                   2),\n                                      'protocol-version': (1, 1)})))},\n  'otid': b'\\x00\\x00\\x00\\x01'})")

    def test_02_print(self):
        self.print_action.print(self.msg)

    def test_03_get_extension(self):
        result = self.action.get_file_extension(self.msg)
        self.assertEqual(result, 'txt')

    def test_04_get_extension_multi(self):
        result = self.action.get_multi_file_extension(self.msg)
        self.assertEqual(result, 'txt')

    def test_05_writes_for_store_many(self):
        result = self.action.writes_for_store_many(self.msgs)
        self.assertDictEqual(result, {
            Path('10.10.10.10_TCAP_MAP.txt'): '(\'begin\',\n {\'components\': [(\'basicROS\',\n                  (\'invoke\',\n                   {\'argument\': (\'RoutingInfoForSM-Arg\',\n                                 {\'msisdn\': b\'\\x91\\x14\\x97Bu3\\xf3\',\n                                  \'serviceCentreAddress\': b\'\\x91\\x14\\x97y\'\n                                                          b\'y\\x08\\xf0\',\n                                  \'sm-RP-PRI\': False}),\n                    \'invokeId\': (\'present\', -1),\n                    \'opcode\': (\'local\', 45)}))],\n  \'dialoguePortion\': {\'direct-reference\': (0, 0, 17, 773, 1, 1, 1),\n                      \'encoding\': (\'single-ASN1-type\',\n                                   (\'DialoguePDU\',\n                                    (\'dialogueRequest\',\n                                     {\'application-context-name\': (0,\n                                                                   4,\n                                                                   0,\n                                                                   0,\n                                                                   1,\n                                                                   0,\n                                                                   20,\n                                                                   2),\n                                      \'protocol-version\': (1, 1)})))},\n  \'otid\': b\'\\x00\\x00\\x00\\x01\'})\n\n(\'continue\',\n {\'components\': [(\'basicROS\',\n                  (\'returnResult\',\n                   {\'invokeId\': (\'present\', 1),\n                    \'result\': {\'opcode\': (\'local\', 56),\n                               \'result\': (\'SendAuthenticationInfoRes\',\n                                          {\'authenticationSetList\': (\'quintupletList\',\n                                                                     [{\'autn\': b\'\\xa2U\\x1a\\x05\'\n                                                                               b\'\\x8c\\xdb\\x00\\x00\'\n                                                                               b\'K\\x8dy\\xf7\'\n                                                                               b\'\\xca\\xffP\\x12\',\n                                                                       \'ck\': b\'\\x8cC\\xa2T\'\n                                                                             b\' P\\x12\\x04\'\n                                                                             b\'g\\xf33\\xc0\'\n                                                                             b\'\\x0fB\\xd8K\',\n                                                                       \'ik\': b\'C\\xa2T \'\n                                                                             b\'P\\x12\\x04g\'\n                                                                             b\'\\xf33\\xc0\\x0f\'\n                                                                             b\'B\\xd8K\\x8c\',\n                                                                       \'rand\': b\'K\\x9da\\x91\'\n                                                                               b\'\\x10u6e\'\n                                                                               b\'\\x8c\\xfeY\\x88\'\n                                                                               b"\\x0c\\xd2\\xac\'",\n                                                                       \'xres\': b\'K\\x8cC\\xa2\'\n                                                                               b\'T P\\x12\'\n                                                                               b\'\\x04g\\xf33\'\n                                                                               b\'\\xc0\\x0fB\\xd8\'}])})}}))],\n  \'dialoguePortion\': {\'direct-reference\': (0, 0, 17, 773, 1, 1, 1),\n                      \'encoding\': (\'single-ASN1-type\',\n                                   (\'DialoguePDU\',\n                                    (\'dialogueResponse\',\n                                     {\'application-context-name\': (0,\n                                                                   4,\n                                                                   0,\n                                                                   0,\n                                                                   1,\n                                                                   0,\n                                                                   14,\n                                                                   3),\n                                      \'protocol-version\': (1, 1),\n                                      \'result\': 0,\n                                      \'result-source-diagnostic\': (\'dialogue-service-user\',\n                                                                   0)})))},\n  \'dtid\': b\'\\xa5\\x05\\x00\\x01\',\n  \'otid\': b\'\\x84\\x00\\x01\\xff\'})\n\n(\'continue\',\n {\'components\': [(\'basicROS\',\n                  (\'invoke\',\n                   {\'invokeId\': (\'present\', 2), \'opcode\': (\'local\', 56)}))],\n  \'dtid\': b\'\\x84\\x00\\x01\\xff\',\n  \'otid\': b\'\\xa5\\x05\\x00\\x01\'})\n\n(\'end\',\n {\'components\': [(\'basicROS\',\n                  (\'returnError\',\n                   {\'errcode\': (\'local\', 11), \'invokeId\': (\'present\', 1)}))],\n  \'dialoguePortion\': {\'direct-reference\': (0, 0, 17, 773, 1, 1, 1),\n                      \'encoding\': (\'single-ASN1-type\',\n                                   (\'DialoguePDU\',\n                                    (\'dialogueResponse\',\n                                     {\'application-context-name\': (0,\n                                                                   4,\n                                                                   0,\n                                                                   0,\n                                                                   1,\n                                                                   0,\n                                                                   5,\n                                                                   3),\n                                      \'protocol-version\': (1, 1),\n                                      \'result\': 0,\n                                      \'result-source-diagnostic\': (\'dialogue-service-user\',\n                                                                   0)})))},\n  \'dtid\': b\'W\\x18\\x00\\x00\'})\n\n'}
                             )

    def test_06_do(self):
        asyncio.run(self.do_async(self.action.do, self.msg))
        expected_file = Path(self.base_data_dir, 'Decoded', 'TCAP_MAP', '10.10.10.10_00000001.txt')
        self.assertFileContentsEqual(expected_file,
                                     "('begin',\n {'components': [('basicROS',\n                  ('invoke',\n                   {'argument': ('RoutingInfoForSM-Arg',\n                                 {'msisdn': b'\\x91\\x14\\x97Bu3\\xf3',\n                                  'serviceCentreAddress': b'\\x91\\x14\\x97y'\n                                                          b'y\\x08\\xf0',\n                                  'sm-RP-PRI': False}),\n                    'invokeId': ('present', -1),\n                    'opcode': ('local', 45)}))],\n  'dialoguePortion': {'direct-reference': (0, 0, 17, 773, 1, 1, 1),\n                      'encoding': ('single-ASN1-type',\n                                   ('DialoguePDU',\n                                    ('dialogueRequest',\n                                     {'application-context-name': (0,\n                                                                   4,\n                                                                   0,\n                                                                   0,\n                                                                   1,\n                                                                   0,\n                                                                   20,\n                                                                   2),\n                                      'protocol-version': (1, 1)})))},\n  'otid': b'\\x00\\x00\\x00\\x01'})")

    @skip
    def test_07_do_many(self):
        self.action.do_multiple(self.msgs)
        expected_file = Path(self.base_data_dir, 'Decoded', '10.10.10.10_TCAP_MAP.txt')
        self.assertFileContentsEqual(expected_file,
                                     '(\'begin\',\n {\'components\': [(\'basicROS\',\n                  (\'invoke\',\n                   {\'argument\': (\'RoutingInfoForSM-Arg\',\n                                 {\'msisdn\': b\'\\x91\\x14\\x97Bu3\\xf3\',\n                                  \'serviceCentreAddress\': b\'\\x91\\x14\\x97y\'\n                                                          b\'y\\x08\\xf0\',\n                                  \'sm-RP-PRI\': False}),\n                    \'invokeId\': (\'present\', -1),\n                    \'opcode\': (\'local\', 45)}))],\n  \'dialoguePortion\': {\'direct-reference\': (0, 0, 17, 773, 1, 1, 1),\n                      \'encoding\': (\'single-ASN1-type\',\n                                   (\'DialoguePDU\',\n                                    (\'dialogueRequest\',\n                                     {\'application-context-name\': (0,\n                                                                   4,\n                                                                   0,\n                                                                   0,\n                                                                   1,\n                                                                   0,\n                                                                   20,\n                                                                   2),\n                                      \'protocol-version\': (1, 1)})))},\n  \'otid\': b\'\\x00\\x00\\x00\\x01\'})\n\n(\'continue\',\n {\'components\': [(\'basicROS\',\n                  (\'returnResult\',\n                   {\'invokeId\': (\'present\', 1),\n                    \'result\': {\'opcode\': (\'local\', 56),\n                               \'result\': (\'SendAuthenticationInfoRes\',\n                                          {\'authenticationSetList\': (\'quintupletList\',\n                                                                     [{\'autn\': b\'\\xa2U\\x1a\\x05\'\n                                                                               b\'\\x8c\\xdb\\x00\\x00\'\n                                                                               b\'K\\x8dy\\xf7\'\n                                                                               b\'\\xca\\xffP\\x12\',\n                                                                       \'ck\': b\'\\x8cC\\xa2T\'\n                                                                             b\' P\\x12\\x04\'\n                                                                             b\'g\\xf33\\xc0\'\n                                                                             b\'\\x0fB\\xd8K\',\n                                                                       \'ik\': b\'C\\xa2T \'\n                                                                             b\'P\\x12\\x04g\'\n                                                                             b\'\\xf33\\xc0\\x0f\'\n                                                                             b\'B\\xd8K\\x8c\',\n                                                                       \'rand\': b\'K\\x9da\\x91\'\n                                                                               b\'\\x10u6e\'\n                                                                               b\'\\x8c\\xfeY\\x88\'\n                                                                               b"\\x0c\\xd2\\xac\'",\n                                                                       \'xres\': b\'K\\x8cC\\xa2\'\n                                                                               b\'T P\\x12\'\n                                                                               b\'\\x04g\\xf33\'\n                                                                               b\'\\xc0\\x0fB\\xd8\'}])})}}))],\n  \'dialoguePortion\': {\'direct-reference\': (0, 0, 17, 773, 1, 1, 1),\n                      \'encoding\': (\'single-ASN1-type\',\n                                   (\'DialoguePDU\',\n                                    (\'dialogueResponse\',\n                                     {\'application-context-name\': (0,\n                                                                   4,\n                                                                   0,\n                                                                   0,\n                                                                   1,\n                                                                   0,\n                                                                   14,\n                                                                   3),\n                                      \'protocol-version\': (1, 1),\n                                      \'result\': 0,\n                                      \'result-source-diagnostic\': (\'dialogue-service-user\',\n                                                                   0)})))},\n  \'dtid\': b\'\\xa5\\x05\\x00\\x01\',\n  \'otid\': b\'\\x84\\x00\\x01\\xff\'})\n\n(\'continue\',\n {\'components\': [(\'basicROS\',\n                  (\'invoke\',\n                   {\'invokeId\': (\'present\', 2), \'opcode\': (\'local\', 56)}))],\n  \'dtid\': b\'\\x84\\x00\\x01\\xff\',\n  \'otid\': b\'\\xa5\\x05\\x00\\x01\'})\n\n(\'end\',\n {\'components\': [(\'basicROS\',\n                  (\'returnError\',\n                   {\'errcode\': (\'local\', 11), \'invokeId\': (\'present\', 1)}))],\n  \'dialoguePortion\': {\'direct-reference\': (0, 0, 17, 773, 1, 1, 1),\n                      \'encoding\': (\'single-ASN1-type\',\n                                   (\'DialoguePDU\',\n                                    (\'dialogueResponse\',\n                                     {\'application-context-name\': (0,\n                                                                   4,\n                                                                   0,\n                                                                   0,\n                                                                   1,\n                                                                   0,\n                                                                   5,\n                                                                   3),\n                                      \'protocol-version\': (1, 1),\n                                      \'result\': 0,\n                                      \'result-source-diagnostic\': (\'dialogue-service-user\',\n                                                                   0)})))},\n  \'dtid\': b\'W\\x18\\x00\\x00\'})\n\n')
