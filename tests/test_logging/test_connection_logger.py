import asyncio


class TestConnectionLogger:
    def test_00_logger_init(self, connection_logger):
        assert connection_logger.logger.name == 'receiver.logger'
        assert connection_logger.extra == ''
        assert connection_logger.datefmt == '%Y-%M-%d %H:%M:%S'

    def test_01_get_extra_inet(self, context): ...

    def test_02_get_extra_unix_server(self, context_unix_socket): ...

    def test_03_get_extra_pipe(self, context_windows_pipe): ...

    def test_04_process(self, msg, kwargs): ...

    def test_05_manage_error(self, caplog) -> None: ...

    def test_06_manage_critical_error(self, caplog) -> None: ...

    def test_07_new_connection(self, caplog) -> None: ...

    def test_08_log_msgs(self, caplog) -> None: ...

    def test_09_on_sending_decoded_msg(self, caplog) -> None: ...

    def test_10_on_sending_encoded_msg(self, caplog) -> None: ...


class TestConnectionLoggerNoStats:
    def test_00_has_no_stats(self, receiver_connection_logger): ...

    def test_00_on_buffer_received(self, receiver_connection_logger, caplog): ...

    def test_01_on_msg_processed(self, receiver_connection_logger, caplog): ...

    def test_02_on_msg_sent(self, receiver_connection_logger, caplog): ...

    def test_03_connection_finished(self, receiver_connection_logger, caplog): ...


class TestConnectionLoggerStats:
    def test_00_has_stats_logger(self, receiver_connection_logger_stats, caplog): ...

    def test_01_on_buffer_received(self, receiver_connection_logger_stats, caplog): ...

    def test_02_on_msg_processed(self, receiver_connection_logger_stats, caplog): ...

    def test_03_on_msg_sent(self, receiver_connection_logger_stats, caplog): ...

    def test_04_connection_finished(self, receiver_connection_logger_stats, caplog): ...

    def test_05_stats_logging(self, receiver_connection_logger_stats, asn_buffer, stats_formatter, caplog):
        caplog.handler.setFormatter(stats_formatter)
        stats_logger.on_buffer_received(asn_buffer)
        stats_logger.on_msg_processed(326)
        assert stats_logger.received == 326
        assert stats_logger.processed == 326
        await asyncio.sleep(0.15)
        assert caplog.text == "127.0.0.1 INTERVAL 1 1 0.32KB 0.32KB 0.32KB/s 0.32KB 1\n"
        assert stats_logger.received == 0
        assert stats_logger.processed == 0
